To create a Splunk search query to detect activity related to T1003.008 - OS Credential Dumping of /etc/passwd and /etc/shadow, you can use the following search query. This query will help you identify any execution of the `unshadow` utility on your Linux systems:

```spl
index=<your_index> sourcetype=<your_sourcetype> (command="/usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db" OR cmdline="*unshadow*") NOT (user=root)
```

Here's an explanation of the components in this search query:

1. `index=<your_index>`: Replace `<your_index>` with the name of the index where your relevant log data is stored.

2. `sourcetype=<your_sourcetype>`: Replace `<your_sourcetype>` with the name of the sourcetype that corresponds to the log data you want to search. This helps narrow down the search to relevant log sources.

3. `(command="/usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db" OR cmdline="*unshadow*")`: This part of the query looks for two conditions:
   - It searches for events where the `command` field matches the exact execution command of the `unshadow` utility, which is `/usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db`.
   - It also searches for events where the `cmdline` field contains the word "unshadow." This covers cases where the utility might be invoked with different arguments or variations.

4. `NOT (user=root)`: This part of the query excludes events where the `user` field is set to "root" because, as per your description, `/etc/shadow` is only readable by the root user by default. If you expect legitimate root usage, you can adjust this part of the query to suit your specific environment.

Make sure to replace `<your_index>` and `<your_sourcetype>` with appropriate values for your Splunk setup. Additionally, adjust the query as needed to match the specifics of your environment and log sources.




I understand that you want to detect the activity within the tests rather than just flagging the tests themselves. In this case, you can modify the Splunk search query to focus on the activity associated with each test. Here's a search query that detects the specific activities within the atomic tests:

```spl
index=<your_index> sourcetype=<your_sourcetype>
| search (command="sudo cat /etc/shadow > *") OR
  (command="cat /etc/passwd > *") OR
  (command="echo -e \"e /etc/passwd\\n,p\\ne /etc/shadow\\n,p\\n\" | ed > *") OR
  (command="function testcat(){ echo \"$(< $1)\"; } testcat /etc/passwd > *|testcat /etc/shadow > *")
| table _time, user, host, command
```

This modified query specifically looks for the activities within each test scenario, such as the execution of commands like `sudo cat /etc/shadow`, `cat /etc/passwd`, `echo -e ... | ed`, and the `testcat` function calls. It then displays relevant fields like the timestamp (`_time`), user, host, and the executed command.

This approach will help you focus on detecting the activities associated with the tests rather than just identifying the tests themselves. Again, ensure that you adjust the index and sourcetype to match your environment, and test the query in a controlled environment before using it in a production setting.
