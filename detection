index=your_index sourcetype=your_sourcetype "certutil.exe" 
    (certutil_command="-export" OR certutil_command="-importpfx" OR certutil_command="-importcert" OR certutil_command="-sign")
    (certutil_argument=* OR certutil_argument="-f" OR certutil_argument="-user" OR certutil_argument="-p" OR certutil_argument="-pin")
    (certutil_argument=*token* OR certutil_argument=*adfs*)


To detect Golden SAML authentications by correlating service provider login events with corresponding authentication events in ADFS and Domain Controllers, you can use the following Splunk search query:

```plaintext
index=your_index sourcetype=windows_security_log
    (EventCode=1202 OR EventCode=1200) AND EventID="Security-Auditing" AND EventData="The Federation Service validated a new credential"
| table EventCode, EventID, host, _time
| join host [search index=your_index sourcetype=windows_security_log EventCode=4769 EventID="Security-Auditing" 
    | table host, EventCode, EventID, _time]
| join host [search index=your_index sourcetype=service_provider_logs 
    | search (service="AWS" AND (action="ConsoleLogin" OR action="AssumeRoleWithSAML")) OR (service="Azure AD" AND action="Sign-ins")
    | table host, action, service, _time]
| stats count by host, action, service
```

Here's a breakdown of the search query:

- `index=your_index sourcetype=windows_security_log`: Replace `your_index` with the appropriate value for your Splunk environment and ensure the sourcetype is set correctly for the Windows Security Event Log.

- `(EventCode=1202 OR EventCode=1200) AND EventID="Security-Auditing" AND EventData="The Federation Service validated a new credential"`: Searches for ADFS server Windows Security Event Log events with Event Code 1202 or 1200 and Event ID "Security-Auditing" containing the specified EventData. Adjust the values or the query structure if your log data differs.

- `table EventCode, EventID, host, _time`: Selects specific fields to include in the result table for the ADFS server events.

- `join host [search index=your_index sourcetype=windows_security_log EventCode=4769 EventID="Security-Auditing" | table host, EventCode, EventID, _time]`: Joins the ADFS server events with Domain Controller Windows Security Event Log events with Event Code 4769 and Event ID "Security-Auditing" based on the common field "host". Modify the index and sourcetype as needed.

- `join host [search index=your_index sourcetype=service_provider_logs | search (service="AWS" AND (action="ConsoleLogin" OR action="AssumeRoleWithSAML")) OR (service="Azure AD" AND action="Sign-ins") | table host, action, service, _time]`: Joins the previous events with the service provider logs based on the common field "host". Adjust the conditions and fields based on your specific service provider logs.

- `stats count by host, action, service`: Provides a count of events grouped by the host, action, and service fields, indicating the number of successful logins to service providers using SAML SSO without corresponding ADFS and Domain Controller events.

Make sure to replace `your_index` and adjust other fields and conditions as necessary to match your environment and log data structure.


Apologies for the confusion. The previous query I provided was just a partial example. Here's the complete Splunk search query that incorporates all the necessary events for detecting Golden SAML authentications by correlating service provider login events with corresponding authentication events in ADFS and Domain Controllers:

```plaintext
index=your_index sourcetype=windows_security_log (EventCode=1202 OR EventCode=1200) AND EventID="Security-Auditing" AND EventData="The Federation Service validated a new credential"
| join host [search index=your_index sourcetype=windows_security_log EventCode=4769 EventID="Security-Auditing"]
| join host [search index=your_index sourcetype=service_provider_logs (service="AWS" AND (action="ConsoleLogin" OR action="AssumeRoleWithSAML")) OR (service="Azure AD" AND action="Sign-ins")]
| stats count by host, action, service
```

Here's the breakdown of the complete query:

- `index=your_index sourcetype=windows_security_log (EventCode=1202 OR EventCode=1200) AND EventID="Security-Auditing" AND EventData="The Federation Service validated a new credential"`: Searches for ADFS server Windows Security Event Log events with Event Code 1202 or 1200, Event ID "Security-Auditing", and EventData indicating a validated credential.

- `join host [search index=your_index sourcetype=windows_security_log EventCode=4769 EventID="Security-Auditing"]`: Joins the ADFS server events with Domain Controller Windows Security Event Log events with Event Code 4769 and Event ID "Security-Auditing" based on the common field "host".

- `join host [search index=your_index sourcetype=service_provider_logs (service="AWS" AND (action="ConsoleLogin" OR action="AssumeRoleWithSAML")) OR (service="Azure AD" AND action="Sign-ins")]`: Joins the previous events with the service provider logs based on the common field "host" and filters for the specific service provider logs and login actions.

- `stats count by host, action, service`: Provides a count of events grouped by the host, action, and service fields, indicating the number of successful logins to service providers using SAML SSO without corresponding ADFS and Domain Controller events.

Remember to replace `your_index` with the appropriate index name in your Splunk environment. You may also need to adjust other fields, conditions, and filter values based on your specific log data.


Certainly! Here's a PowerShell script that you can use to simulate a successful login to a service provider using SAML SSO, which should trigger the detection in Splunk when you search for the corresponding events:

```powershell
# Simulate successful login to a service provider using SAML SSO
$serviceProvider = "AWS"  # Specify the service provider (e.g., "AWS", "Azure AD")
$action = "ConsoleLogin"  # Specify the login action (e.g., "ConsoleLogin", "AssumeRoleWithSAML", "Sign-ins")

# Generate event logs for ADFS server
$event1202 = New-Object System.Diagnostics.EventLog("Security")
$event1202.MachineName = "."  # Replace with the ADFS server hostname if necessary
$event1202.Source = "AD FS"
$event1202.WriteEntry("The Federation Service validated a new credential", 1202)

$event1200 = New-Object System.Diagnostics.EventLog("Security")
$event1200.MachineName = "."  # Replace with the ADFS server hostname if necessary
$event1200.Source = "AD FS"
$event1200.WriteEntry("The Federation Service issued a valid token", 1200)

# Generate event logs for Domain Controller
$event4769 = New-Object System.Diagnostics.EventLog("Security")
$event4769.MachineName = "."  # Replace with the Domain Controller hostname if necessary
$event4769.Source = "Microsoft-Windows-Security-Auditing"
$event4769.WriteEntry("A Kerberos service ticket was requested", 4769)

# Generate logs for the service provider
$serviceProviderLog = "C:\Path\To\ServiceProvider.log"  # Replace with the actual path to the service provider log file
$logMessage = "Successful $action on $serviceProvider"  # Customize the log message as needed

Add-Content -Path $serviceProviderLog -Value $logMessage

# Output success message
Write-Host "Simulated successful login to $serviceProvider using $action. Logs generated."
```

In this script, make sure to replace the following placeholders:

- `$serviceProvider`: Replace with the actual service provider name, such as "AWS" or "Azure AD".
- `$action`: Replace with the appropriate login action specific to your service provider, such as "ConsoleLogin", "AssumeRoleWithSAML", or "Sign-ins".
- `$event1202.MachineName`: If your ADFS server is not running on the local machine, replace `"."` with the hostname or IP address of the ADFS server.
- `$event4769.MachineName`: If your Domain Controller is not running on the local machine, replace `"."` with the hostname or IP address of the Domain Controller.
- `$serviceProviderLog`: Replace with the actual path to the service provider log file where you want to generate the simulated log entry.
- `$logMessage`: Customize the log message according to your service provider log format and requirements.

When you run this script, it will generate the necessary event logs and log entries that should trigger the detection in Splunk when you search for the corresponding events.
